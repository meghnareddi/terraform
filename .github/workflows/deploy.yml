name: Terraform AWS Deployment

on:
  workflow_dispatch:
    inputs:
      deploy_s3:
        description: "Create s3 bucket?"
        required: false
        default: "false"
      deploy_ec2:
        description: "Create ec2 instance?"
        required: false
        default: "false"
      destroy_s3:
        description: "Destroy S3 resources?"
        required: false
        default: "false"
      destroy_ec2:
        description: "Destroy EC2 resources?"
        required: false
        default: "false"

jobs:
  terraform-deploy:
    name: Resource deployment
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Creating S3 bucket
        if: ${{ github.event.inputs.deploy_s3 == 'true' }}
        run: |
          cd s3
          terraform init
          terraform validate
          terraform plan -var-file="../shared/dev.tfvars" 
          terraform apply -var-file="../shared/dev.tfvars" -auto-approve
          pwd
          ls

      - name: Destroying S3 bucket
        if: ${{ github.event.inputs.destroy_s3 == 'true' }}
        run: |
          cd s3
          pwd
          ls 
          find . -name "*.tfstate"
          # terraform init
          terraform destroy -var-file="../shared/dev.tfvars" -auto-approve
      
      - name: Creating ec2 instance
        if: ${{ github.event.inputs.deploy_ec2 == 'true' }}
        run: |
          cd ec2
          # terraform init
          terraform validate
          terraform plan -var-file="../shared/dev.tfvars"
          terraform apply -var-file="../shared/dev.tfvars" -auto-approve
          pwd
          ls

      - name: Destroying ec2 instance
        if: ${{ github.event.inputs.destroy_ec2 == 'true' }}
        run: |
          cd ec2
          pwd
          ls 
          find . -name "*.tfstate"
          terraform destroy -var-file="../shared/dev.tfvars" -auto-approve